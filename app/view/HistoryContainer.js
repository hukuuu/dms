/*
 * File: app/view/HistoryContainer.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.HistoryContainer', {
    extend: 'Ext.Container',
    alias: 'widget.historyContainer',

    config: {
        cls: 'app-page',
        layout: 'vbox',
        items: [{
                xtype: 'container',
                action: 'allSmsCount',
                flex: 1,
                tpl: [
                    '<div class="app-counter-wrapper">',
                        '<h1>Изпратени SMS-и за месеца</h1>',
                        '<div class="app-counter">{count}</div>',
                    '</div>'
                ],
                data: {
                    count: 3
                }
            }, {
                xtype: 'container',
                action: 'chart',
                flex: 1,
                html: 'bar'
            }
        ]
    },
    initialize: function() {

        var me = this,
            counter = 0,
            smsCouonterCont = me.query('container[action=allSmsCount]')[0],
            chartCont = me.query('container[action=chart]')[0],
            date = new Date(),
            lastThirtyDays = [],
            values = [],
            store = Ext.getStore('SmsCountStore');



        me.on('show', function() {

            smsCouonterCont.setData({
                count: store.getCount(30)
            });

            var r = Raphael(chartCont.element.dom),
                data = store.getLastDays(30),
                indexes = [],
                values = [];

            Ext.each(data,function(item) {
                indexes.push(item.date.getDate());
                values.push(item.count || 1);
            });


            var xIndexes = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],
                x = 10,
                y = 10,
                xlen = chartCont.element.getWidth() - 40,
                ylen = chartCont.element.getHeight() - 40,
                gutter = 20,
                chrt = r.linechart(x, y, xlen, ylen, xIndexes , values, {
                    gutter: gutter,
                    nostroke: false,
                    axis: "0 0 0 1",
                    symbol: "circle",
                    width: 1.3,
                    smooth: true,
                    colors: ['#ff9b15']
                });

            Raphael.g.axis(
                x + gutter,
                y + ylen - gutter,
                xlen - 2 * gutter, null, null,
                indexes.length - 1,
                0, indexes,
                r
            );


            document.el = this.query('container[action=chart]')[0].element;
        });


    }

});