/*
 * File: app/view/HistoryContainer.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.HistoryContainer', {
    extend: 'Ext.Container',
    alias: 'widget.historyContainer',

    config: {
        cls: 'app-page',
        layout: 'vbox',
        items: [{
                xtype: 'container',
                action: 'allSmsCount',
                flex: 1,
                tpl: '<h1>foo {count}</h1>',
                data: {
                    count: 3
                }
            }, {
                xtype: 'container',
                action: 'chart',
                flex: 1,
                html: 'bar'
            }
        ]
    },
    initialize: function() {

        var counter = 0;


        this.on('show', function() {
            counter = 0;
            Ext.each(Ext.getStore('SmsCountStore').data.all, function(rec, index) {
                counter += rec.get('count');
            });

            console.log('ctre', counter);


            this.query('container[action=allSmsCount]')[0].setData({
                count: counter
            });

            var r = Raphael(this.query('container[action=chart]')[0].element.dom);

            r.linechart(
                10,
                10,
                400,
                300, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [0, 20, 30, 40, 30, 40, 50, 40, 15, 0], {
                symbol: 'circle',
                shade: true,
                axis: '0 0 1 1',
                colors: ['red', 'green']
            });

            document.el = this.query('container[action=chart]')[0].element;
            console.log('element', this.query('container[action=chart]')[0].element);
        });


    }

});