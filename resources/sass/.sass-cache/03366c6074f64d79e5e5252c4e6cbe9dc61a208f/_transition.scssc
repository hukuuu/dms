3.1.7 (Brainy Betty)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@has_childrenT:
@linei:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@children[o:Sass::Tree::ImportNode
:@imported_filename"shared;i;0;	[ :@options{ o:Sass::Tree::CommentNode:@lines[ :
@loud0:@value"ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;i;	[ ;@:@silenti o:Sass::Tree::VariableNode:
@expro:Sass::Script::String	;"all;i:
@type:identifier;@:
@name" default-transition-property;i;	[ :@guarded"!default;@o;;o:Sass::Script::Number:@original"1s;i;i:@denominator_units[ ;@:@numerator_units["s;" default-transition-duration;i;	[ ;"!default;@o;;o:Sass::Script::Bool;F;i;@;" default-transition-function;i;	[ ;"!default;@o;;o;;F;i;@;"default-transition-delay;i;	[ ;"!default;@o;;o:Sass::Script::List	;[o;	;"transform;i;;;@o;	;"transform-origin;i;;;@;i;@:@separator:
comma;"#transitionable-prefixed-values;i;	[ ;"!default;@o;;[ ;0;"}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;i!;	[ ;@;i o:Sass::Tree::MixinDefNode;"transition-property;T:
@args[[o:Sass::Script::Variable;"property-1:@underscored_name"property_1;{ o;#	;" default-transition-property;i&;$" default_transition_property;@>[o;#;"property-2;$"property_2;@>o;;F;i';@>[o;#;"property-3;$"property_3;@>o;;F;i(;@>[o;#;"property-4;$"property_4;@>o;;F;i);@>[o;#;"property-5;$"property_5;@>o;;F;i*;@>[o;#;"property-6;$"property_6;@>o;;F;i+;@>[o;#;"property-7;$"property_7;@>o;;F;i,;@>[o;#;"property-8;$"property_8;@>o;;F;i-;@>[o;#;"property-9;$"property_9;@>o;;F;i.;@>[o;#;"property-10;$"property_10;@>o;;F;i/;@>;i0;	[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"string:
@linei1:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;"property-1;	i1:@underscored_name"property_1;@	;	i1;@	;	i1;@	0[o:Sass::Tree::VariableNode:
@expro;
;"unquote;{ ;[o;	;"property-1;	i1;"property_1;@	;	i1;@	;"property-1;	i1:@children[ :@guarded0;@	o;;o:Sass::Script::Funcall
;"compact:@keywords{ ;"[o;#	;"property-1;i2;$"property_1;@o;#	;"property-2;i2;$"property_2;@o;#	;"property-3;i2;$"property_3;@o;#	;"property-4;i2;$"property_4;@o;#	;"property-5;i2;$"property_5;@o;#	;"property-6;i2;$"property_6;@o;#	;"property-7;i2;$"property_7;@o;#	;"property-8;i2;$"property_8;@o;#	;"property-9;i2;$"property_9;@o;#	;"property-10;i2;$"property_10;@;i2;@;"properties;i2;	[ ;0;@u;%¼[o:Sass::Script::Variable	:
@name"$experimental-support-for-webkit:
@linei3:@underscored_name"$experimental_support_for_webkit:@options{ 0[o:Sass::Tree::PropNode;[" -webkit-transition-property:
@tabsi :@valueo:Sass::Script::Funcall
;"prefixed-for-transition:@keywords{ :
@args[o:Sass::Script::String	;"-webkit;i3:
@type:identifier;	@	o; 	;"properties;i3;"properties;	@	;i3;	@	;i3:@children[ :@prop_syntax:new;	@	u;%¸[o:Sass::Script::Variable	:
@name"%experimental-support-for-mozilla:
@linei4:@underscored_name"%experimental_support_for_mozilla:@options{ 0[o:Sass::Tree::PropNode;["-moz-transition-property:
@tabsi :@valueo:Sass::Script::Funcall
;"prefixed-for-transition:@keywords{ :
@args[o:Sass::Script::String	;"	-moz;i4:
@type:identifier;	@	o; 	;"properties;i4;"properties;	@	;i4;	@	;i4:@children[ :@prop_syntax:new;	@	u;%°[o:Sass::Script::Variable	:
@name"#experimental-support-for-opera:
@linei5:@underscored_name"#experimental_support_for_opera:@options{ 0[o:Sass::Tree::PropNode;["-o-transition-property:
@tabsi :@valueo:Sass::Script::Funcall
;"prefixed-for-transition:@keywords{ :
@args[o:Sass::Script::String	;"-o;i5:
@type:identifier;	@	o; 	;"properties;i5;"properties;	@	;i5;	@	;i5:@children[ :@prop_syntax:new;	@	o:Sass::Tree::PropNode;["transition-property:
@tabsi ;o;#	;"properties;i6;$"properties;@;i6;	[ :@prop_syntax:new;@;@o;;[ ;0;"¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;i9;	[ ;@;i o;!;"transition-duration;T;"[[o;#;"duration-1;$"duration_1;{ o;#	;" default-transition-duration;i>;$" default_transition_duration;@¦[o;#;"duration-2;$"duration_2;@¦o;;F;i?;@¦[o;#;"duration-3;$"duration_3;@¦o;;F;i@;@¦[o;#;"duration-4;$"duration_4;@¦o;;F;iA;@¦[o;#;"duration-5;$"duration_5;@¦o;;F;iB;@¦[o;#;"duration-6;$"duration_6;@¦o;;F;iC;@¦[o;#;"duration-7;$"duration_7;@¦o;;F;iD;@¦[o;#;"duration-8;$"duration_8;@¦o;;F;iE;@¦[o;#;"duration-9;$"duration_9;@¦o;;F;iF;@¦[o;#;"duration-10;$"duration_10;@¦o;;F;iG;@¦;iH;	[u;%Í[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"string:
@lineiI:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;"duration-1;	iI:@underscored_name"duration_1;@	;	iI;@	;	iI;@	0[o:Sass::Tree::VariableNode:
@expro;
;"unquote;{ ;[o;	;"duration-1;	iI;"duration_1;@	;	iI;@	;"duration-1;	iI:@children[ :@guarded0;@	o;;o;&
;"compact;'{ ;"[o;#	;"duration-1;iJ;$"duration_1;@o;#	;"duration-2;iJ;$"duration_2;@o;#	;"duration-3;iJ;$"duration_3;@o;#	;"duration-4;iJ;$"duration_4;@o;#	;"duration-5;iJ;$"duration_5;@o;#	;"duration-6;iJ;$"duration_6;@o;#	;"duration-7;iJ;$"duration_7;@o;#	;"duration-8;iJ;$"duration_8;@o;#	;"duration-9;iJ;$"duration_9;@o;#	;"duration-10;iJ;$"duration_10;@;iJ;@;"durations;iJ;	[ ;0;@o:Sass::Tree::MixinNode;"experimental;'{ ;"[o;	;"transition-duration;iK;;;@o;#	;"durations;iK;$"durations;@o;	;"	-moz;iL;;;@o;	;"-webkit;iL;;;@o;	;"-o;iL;;;@o:!Sass::Script::UnaryOperation	:@operator:not:@operando;	;"-ms;iL;;;@;iL;@o;-	;.;/;0o;	;"-khtml;iL;;;@;iL;@o;	;"official;iL;;;@;iM;	[ ;@;@o;;[ ;0;"õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;iP;	[ ;@;i o;!;"transition-timing-function;T;"[[o;#;"function-1;$"function_1;{ o;#	;" default-transition-function;iV;$" default_transition_function;@![o;#;"function-2;$"function_2;@!o;;F;iW;@![o;#;"function-3;$"function_3;@!o;;F;iX;@![o;#;"function-4;$"function_4;@!o;;F;iY;@![o;#;"function-5;$"function_5;@!o;;F;iZ;@![o;#;"function-6;$"function_6;@!o;;F;i[;@![o;#;"function-7;$"function_7;@!o;;F;i\;@![o;#;"function-8;$"function_8;@!o;;F;i];@![o;#;"function-9;$"function_9;@!o;;F;i^;@![o;#;"function-10;$"function_10;@!o;;F;i_;@!;i`;	[o;;o;&
;"unquote;'{ ;"[o;#	;"function-1;ia;$"function_1;@;ia;@;"function-1;ia;	[ ;0;@o;;o;&
;"compact;'{ ;"[o;#	;"function-1;ib;$"function_1;@o;#	;"function-2;ib;$"function_2;@o;#	;"function-3;ib;$"function_3;@o;#	;"function-4;ib;$"function_4;@o;#	;"function-5;ib;$"function_5;@o;#	;"function-6;ib;$"function_6;@o;#	;"function-7;ib;$"function_7;@o;#	;"function-8;ib;$"function_8;@o;#	;"function-9;ib;$"function_9;@o;#	;"function-10;ib;$"function_10;@;ib;@;"functions;ib;	[ ;0;@o;,;"experimental;'{ ;"[o;	;"transition-timing-function;ic;;;@o;#	;"functions;ic;$"functions;@o;	;"	-moz;id;;;@o;	;"-webkit;id;;;@o;	;"-o;id;;;@o;-	;.;/;0o;	;"-ms;id;;;@;id;@o;-	;.;/;0o;	;"-khtml;id;;;@;id;@o;	;"official;id;;;@;ie;	[ ;@;@o;;[ ;0;"¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;ih;	[ ;@;i o;!;"transition-delay;T;"[[o;#;"delay-1;$"delay_1;{ o;#	;"default-transition-delay;im;$"default_transition_delay;@¥[o;#;"delay-2;$"delay_2;@¥o;;F;in;@¥[o;#;"delay-3;$"delay_3;@¥o;;F;io;@¥[o;#;"delay-4;$"delay_4;@¥o;;F;ip;@¥[o;#;"delay-5;$"delay_5;@¥o;;F;iq;@¥[o;#;"delay-6;$"delay_6;@¥o;;F;ir;@¥[o;#;"delay-7;$"delay_7;@¥o;;F;is;@¥[o;#;"delay-8;$"delay_8;@¥o;;F;it;@¥[o;#;"delay-9;$"delay_9;@¥o;;F;iu;@¥[o;#;"delay-10;$"delay_10;@¥o;;F;iv;@¥;iw;	[u;%¾[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"string:
@lineix:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;"delay-1;	ix:@underscored_name"delay_1;@	;	ix;@	;	ix;@	0[o:Sass::Tree::VariableNode:
@expro;
;"unquote;{ ;[o;	;"delay-1;	ix;"delay_1;@	;	ix;@	;"delay-1;	ix:@children[ :@guarded0;@	o;;o;&
;"compact;'{ ;"[o;#	;"delay-1;iy;$"delay_1;@o;#	;"delay-2;iy;$"delay_2;@o;#	;"delay-3;iy;$"delay_3;@o;#	;"delay-4;iy;$"delay_4;@o;#	;"delay-5;iy;$"delay_5;@o;#	;"delay-6;iy;$"delay_6;@o;#	;"delay-7;iy;$"delay_7;@o;#	;"delay-8;iy;$"delay_8;@o;#	;"delay-9;iy;$"delay_9;@o;#	;"delay-10;iy;$"delay_10;@;iy;@;"delays;iy;	[ ;0;@o;,;"experimental;'{ ;"[o;	;"transition-delay;iz;;;@o;#	;"delays;iz;$"delays;@o;	;"	-moz;i{;;;@o;	;"-webkit;i{;;;@o;	;"-o;i{;;;@o;-	;.;/;0o;	;"-ms;i{;;;@;i{;@o;-	;.;/;0o;	;"-khtml;i{;;;@;i{;@o;	;"official;i{;;;@;i|;	[ ;@;@o;;[ ;0;"*/* Transition all-in-one shorthand */;i;	[ ;@;i o;!;"single-transition;T;"[	[o;#;"property;$"property;{ o;#	;" default-transition-property;i};$" default_transition_property;@ [o;#;"duration;$"duration;@ o;#	;" default-transition-duration;i~;$" default_transition_duration;@ [o;#;"function;$"function;@ o;#	;" default-transition-function;i;$" default_transition_function;@ [o;#;"
delay;$"
delay;@ o;#	;"default-transition-delay;i;$"default_transition_delay;@ ;i;	[o;,;"transition;'{ ;"[o;&
;"compact;'{ ;"[o;	;[	o;#	;"property;i;$"property;@o;#	;"duration;i;$"duration;@o;#	;"function;i;$"function;@o;#	;"
delay;i;$"
delay;@;i;@;:
space;i;@;i;	[ ;@;@o;!;"transition;T;"[[o;#;"transition-1;$"transition_1;{ o;	;"default;i;;;@X[o;#;"transition-2;$"transition_2;@Xo;;F;i;@X[o;#;"transition-3;$"transition_3;@Xo;;F;i;@X[o;#;"transition-4;$"transition_4;@Xo;;F;i;@X[o;#;"transition-5;$"transition_5;@Xo;;F;i;@X[o;#;"transition-6;$"transition_6;@Xo;;F;i;@X[o;#;"transition-7;$"transition_7;@Xo;;F;i;@X[o;#;"transition-8;$"transition_8;@Xo;;F;i;@X[o;#;"transition-9;$"transition_9;@Xo;;F;i;@X[o;#;"transition-10;$"transition_10;@Xo;;F;i;@X;i;	[u;%î[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"default:
@linei:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Variable	:
@name"transition-1;	i:@underscored_name"transition_1;@	;	i;@	0[o:Sass::Tree::VariableNode:
@expro:Sass::Script::Funcall
;"compact:@keywords{ :
@args[o:Sass::Script::List	;[	o;	;" default-transition-property;	i;" default_transition_property;@	o;	;" default-transition-duration;	i;" default_transition_duration;@	o;	;" default-transition-function;	i;" default_transition_function;@	o;	;"default-transition-delay;	i;"default_transition_delay;@	;	i;@	:@separator:
space;	i;@	;"transition-1;	i:@children[ :@guarded0;@	o;;o;;F;i;@;"transitions;i;	[ ;0;@u;%g[o:Sass::Script::Operation
:@operand2o; 
;o:Sass::Script::String	:@value"	list:
@linei:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:@keywords{ :
@args[o;
;"nth;{ ;[o:Sass::Script::Variable	;"transition-1;	i:@underscored_name"transition_1;@
o:Sass::Script::Number:@original"1;i;	i:@denominator_units[ ;@
:@numerator_units[ ;	i;@
;	i;@
;	i;@
;:and;o; 
;o;	;"	list;	i;
;;@
;;;o;
;"type-of;{ ;[o;	;"transition-1;	i;"transition_1;@
;	i;@
;	i;@
;	i;@
u:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:
@expro:Sass::Script::Funcall
:
@name"compact:@keywords{ :
@args[o:Sass::Script::Variable	;"transition-1:
@linei:@underscored_name"transition_1:@options{ o;	;"transition-2;i;"transition_2;@o;	;"transition-3;i;"transition_3;@o;	;"transition-4;i;"transition_4;@o;	;"transition-5;i;"transition_5;@o;	;"transition-6;i;"transition_6;@o;	;"transition-7;i;"transition_7;@o;	;"transition-8;i;"transition_8;@o;	;"transition-9;i;"transition_9;@o;	;"transition-10;i;"transition_10;@;i;@;"transitions;i:@children[ :@guarded0;@[o:Sass::Tree::VariableNode:
@expro;
;"	join;{ ;[o;	;"transition-1;	i;"transition_1;@
o;
;"compact;{ ;[o;	;"transition-2;	i;"transition_2;@
o;	;"transition-3;	i;"transition_3;@
o;	;"transition-4;	i;"transition_4;@
o;	;"transition-5;	i;"transition_5;@
o;	;"transition-6;	i;"transition_6;@
o;	;"transition-7;	i;"transition_7;@
o;	;"transition-8;	i;"transition_8;@
o;	;"transition-9;	i;"transition_9;@
o;	;"transition-10;	i;"transition_10;@
;	i;@
o;	;"
comma;	i;
;;@
;	i;@
;"transitions;	i:@children[ :@guarded0;@
o;;o;&
;"comma-list;'{ ;"[ ;i;@;"delays;i;	[ ;0;@o;;o;;F;i;@;"has-delays;i;	[ ;0;@o;;o;&
;"comma-list;'{ ;"[ ;i;@;"webkit-value;i;	[ ;0;@o;;o;&
;"comma-list;'{ ;"[ ;i;@;"moz-value;i;	[ ;0;@o;;o;&
;"comma-list;'{ ;"[ ;i;@;"o-value;i;	[ ;0;@o;;[ ;0;"/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;i ;	[ ;@;i o:Sass::Tree::EachNode;T:	@var"transition;i¢;	[o;;[ ;0;"}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;i£;	[ ;@;i o;;o;&
;"nth;'{ ;"[o;#	;"transition;i¥;$"transition;@o;;"1;i;i¥;[ ;@;[ ;i¥;@;"property;i¥;	[ ;0;@o;;o;;F;i¦;@;"duration;i¦;	[ ;0;@o;;o;;F;i§;@;"timing-function;i§;	[ ;0;@o;;o;;F;i¨;@;"
delay;i¨;	[ ;0;@u;%
[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@original"1:@valuei:
@linei©:@denominator_units[ :@options{ :@numerator_units[ :@operator:gt:@operand1o:Sass::Script::Funcall
:
@name"length:@keywords{ :
@args[o:Sass::Script::Variable	;"transition;
i©:@underscored_name"transition;@
;
i©;@
;
i©;@
0[o:Sass::Tree::VariableNode:
@expro;
;"nth;{ ;[o;	;"transition;
i©;"transition;@
o;;"2;	i;
i©;@	;@
;[ ;
i©;@
;"duration;
i©:@children[ :@guarded0;@
u;%[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@original"2:@valuei:
@lineiª:@denominator_units[ :@options{ :@numerator_units[ :@operator:gt:@operand1o:Sass::Script::Funcall
:
@name"length:@keywords{ :
@args[o:Sass::Script::Variable	;"transition;
iª:@underscored_name"transition;@
;
iª;@
;
iª;@
0[o:Sass::Tree::VariableNode:
@expro;
;"nth;{ ;[o;	;"transition;
iª;"transition;@
o;;"3;	i;
iª;@	;@
;[ ;
iª;@
;"timing-function;
iª:@children[ :@guarded0;@
u;%M[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@original"3:@valuei:
@linei«:@denominator_units[ :@options{ :@numerator_units[ :@operator:gt:@operand1o:Sass::Script::Funcall
:
@name"length:@keywords{ :
@args[o:Sass::Script::Variable	;"transition;
i«:@underscored_name"transition;@
;
i«;@
;
i«;@
0[o:Sass::Tree::VariableNode:
@expro;
;"nth;{ ;[o;	;"transition;
i«;"transition;@
o;;"4;	i	;
i«;@	;@
;[ ;
i«;@
;"
delay;
i«:@children[ :@guarded0;@
o;;o:Sass::Script::Bool;	T;
i«;@
;"has-delays;
i«;[ ;0;@
o;;[ ;0;";/* If a delay is provided without a timing function */;i­;	[ ;@;i u;%^[o:Sass::Script::Operation
:@operand2o:!Sass::Script::UnaryOperation	:@operator:not:@operando:Sass::Script::Variable	:
@name"
delay:
@linei®:@underscored_name"
delay:@options{ ;i®;@;:and:@operand1o:Sass::Script::Funcall
;"is-time:@keywords{ :
@args[o;	;"timing-function;i®;"timing_function;@;i®;@;i®;@0[o:Sass::Tree::VariableNode:
@expro;	;"timing-function;i®;"timing_function;@;"
delay;i®:@children[ :@guarded0;@o;;o:Sass::Script::Bool:@valueF;i®;@;"timing-function;i®;[ ;0;@o;;o;;T;i®;@;"has-delays;i®;[ ;0;@o;;[ ;0;"9/* Keep a list of delays in case one is specified */;i°;	[ ;@;i o;;o;&
;"append;'{ ;"[o;#	;"delays;i±;$"delays;@o;&
;"if;'{ ;"[o;#	;"
delay;i±;$"
delay;@o;#	;"
delay;i±;$"
delay;@o;;"0s;i ;i±;[ ;@;["s;i±;@;i±;@;"delays;i±;	[ ;0;@o;;o;&
;"append;'{ ;"[o;#	;"webkit-value;i³;$"webkit_value;@o;&
;"compact;'{ ;"[o;	;[o;&
;"prefixed-for-transition;'{ ;"[o;	;"-webkit;i³;;;@o;#	;"property;i³;$"property;@;i³;@o;#	;"duration;i³;$"duration;@o;#	;"timing-function;i³;$"timing_function;@;i³;@;;1;i³;@;i³;@;"webkit-value;i³;	[ ;0;@o;;o;&
;"append;'{ ;"[o;#	;"moz-value;i´;$"moz_value;@o;&
;"compact;'{ ;"[o;	;[	o;&
;"prefixed-for-transition;'{ ;"[o;	;"	-moz;i´;;;@o;#	;"property;i´;$"property;@;i´;@o;#	;"duration;i´;$"duration;@o;#	;"timing-function;i´;$"timing_function;@o;#	;"
delay;i´;$"
delay;@;i´;@;;1;i´;@;i´;@;"moz-value;i´;	[ ;0;@o;;o;&
;"append;'{ ;"[o;#	;"o-value;iµ;$"o_value;@o;&
;"compact;'{ ;"[o;	;[	o;&
;"prefixed-for-transition;'{ ;"[o;	;"-o;iµ;;;@o;#	;"property;iµ;$"property;@;iµ;@o;#	;"duration;iµ;$"duration;@o;#	;"timing-function;iµ;$"timing_function;@o;#	;"
delay;iµ;$"
delay;@;iµ;@;;1;iµ;@;iµ;@;"o-value;iµ;	[ ;0;@:
@listo;#	;"transitions;i¢;$"transitions;@;@u;%é[o:Sass::Script::Variable	:
@name"$experimental-support-for-webkit:
@linei¸:@underscored_name"$experimental_support_for_webkit:@options{ 0[o:Sass::Tree::PropNode;["-webkit-transition:
@tabsi :@valueo; 	;"webkit-value;i¸;"webkit_value;	@	;i¸:@children[ :@prop_syntax:new;	@	o:Sass::Tree::CommentNode:@lines[ :
@loud0;"j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;i¹;[ ;	@	:@silenti u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@name"has-delays:
@lineiº:@underscored_name"has_delays:@options{ 0[o:Sass::Tree::PropNode;["-webkit-transition-delay:
@tabsi :@valueo; 	;"delays;iº;"delays;	@	;iº:@children[ :@prop_syntax:new;	@	u;%#[o:Sass::Script::Variable	:
@name"%experimental-support-for-mozilla:
@linei»:@underscored_name"%experimental_support_for_mozilla:@options{ 0[o:Sass::Tree::PropNode;["-moz-transition:
@tabsi :@valueo; 	;"moz-value;i»;"moz_value;	@	;i»:@children[ :@prop_syntax:new;	@	u;%[o:Sass::Script::Variable	:
@name"#experimental-support-for-opera:
@linei¼:@underscored_name"#experimental_support_for_opera:@options{ 0[o:Sass::Tree::PropNode;["-o-transition:
@tabsi :@valueo; 	;"o-value;i¼;"o_value;	@	;i¼:@children[ :@prop_syntax:new;	@	o;(;["transition;)i ;o;#	;"transitions;i½;$"transitions;@;i½;	[ ;*;+;@;@o;;[ ;0;"Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;iÀ;	[ ;@;i o:Sass::Tree::FunctionNode;"comma-list;T;"[[o;#;"	list;$"	list;@o;	;[ ;iÁ;@;;1;iÁ;	[o:Sass::Tree::ReturnNode	;o;&
;"	join;'{ ;"[o;	;[ ;iÂ;@;;1o;#	;"	list;iÂ;$"	list;@o;	;"
comma;iÂ;;;@;iÂ;@;iÂ;	[ ;@;@o;;[ ;0;"i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;iÅ;	[ ;@;i o;5;"prefixed-for-transition;T;"[[o;#;"prefix;$"prefix;@0[o;#;"property;$"property;@0;iÆ;	[u;%[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"	list:
@lineiÇ:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;"property;	iÇ:@underscored_name"property;@	;	iÇ;@	;	iÇ;@	u:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:
@name"
index:@keywords{ :
@args[o:Sass::Script::Variable	;"#transitionable-prefixed-values:
@lineiÎ:@underscored_name"#transitionable_prefixed_values:@options{ o;		;"property;
iÎ;"property;@;
iÎ;@u:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Variable	:
@name"property:
@lineiÑ:@underscored_name"property:@options{ ;	iÑ:@children[ ;@[o:Sass::Tree::ReturnNode	:
@expro: Sass::Script::Interpolation:@whitespace_after0:@before0:@whitespace_beforei;
iÏ:@aftero;;0;o;;F;0;0;
iÏ;0:@originally_text:originally_text;@:	@mido:Sass::Script::String	:@value"-;
iÏ:
@type:identifier;@;0;
iÏ;0;F;@;o;		;"property;
iÏ;"property;@;F;@;o;		;"prefix;
iÏ;"prefix;@;
iÏ:@children[ ;@[o:Sass::Tree::VariableNode:
@expro;
;"comma-list;{ ;[ ;	iÈ;@	;"new-list;	iÈ:@children[ :@guarded0;@	o:Sass::Tree::EachNode:@has_childrenT:	@var"v;	iÉ;[o;;o;
;"append;{ ;[o;	;"new-list;	iÊ;"new_list;@	o;
;"prefixed-for-transition;{ ;[o;	;"prefix;	iÊ;"prefix;@	o;	;"v;	iÊ;"v;@	;	iÊ;@	;	iÊ;@	;"new-list;	iÊ;[ ;0;@	:
@listo;	;"property;	iÉ;"property;@	;@	o:Sass::Tree::ReturnNode	;o;	;"new-list;	iÌ;"new_list;@	;	iÌ;[ ;@	;@o;;[ ;0;"7/* Checks if the value given is a unit of time. */;iÖ;	[ ;@;i o;5;"is-time;T;"[[o;#;"
value;$"
value;@0;i×;	[u;%ù[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@value"number:
@lineiØ:
@type:identifier:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall
:
@name"type-of:@keywords{ :
@args[o:Sass::Script::Variable	;"
value;	iØ:@underscored_name"
value;@	;	iØ;@	;	iØ;@	u:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Bool:@valueF:
@lineiÛ:@options{ ;	iÛ:@children[ ;
@	[o:Sass::Tree::ReturnNode	:
@expro:!Sass::Script::UnaryOperation	;:not:@operando;	;;;o;
;"
index;{ ;[o:Sass::Script::List	;[o;	;"s;	iÙ;
;;@	o;	;"ms;	iÙ;
;;@	;	iÙ;@	:@separator:
spaceo;
;"	unit;{ ;[o;	;"
value;	iÙ;"
value;@	;	iÙ;@	;	iÙ;@	;	iÙ;@	;	iÙ;@	;	iÙ:@children[ ;@	;@;@